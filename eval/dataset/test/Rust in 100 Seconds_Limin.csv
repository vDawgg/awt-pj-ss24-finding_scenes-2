Filename,Source Filename,Timestamp Local (ms),Timestamp Local (hh:mm:ss.SSS),Timestamp Global (ms),Timestamp Global (hh:mm:ss.SSS),Subtitle,CAPTION,Start Timestamps
Rust in 100 Seconds-Scene-001_0.jpeg,Rust in 100 Seconds-Scene-001.mp4,7874,00:00:07.874,7874,00:00:07.873,systems where performance is absolutely,"The video is a narrated video introducing the programming language Rust using graphics such as the Rust logo or keywords such as 'High Performance', 'Simplicity', 'Systems' to underline its suitablity for high performance systems while having the abstractions of high level languages.",00:00:00.000
Rust in 100 Seconds-Scene-002_0.jpeg,Rust in 100 Seconds-Scene-002.mp4,7273,00:00:07.273,17717,00:00:17.716,started as a side project of great on,"This scene shows possible fields of application for Rust such as game engines, databases, operating systems, web assembly. It started as a side project of Graydon Hoare who created it in 2007. Each of the points of the scene are emphasized using pictures and graphics such as logos of the mentioned fields of application.",00:00:10.444
Rust in 100 Seconds-Scene-003_0.jpeg,Rust in 100 Seconds-Scene-003.mp4,2235,00:00:02.235,21955,00:00:21.954,rust fungus it was sponsored by mozilla,"Rust is named after the Rust fungus, and is sponsored by Mozilla and is ranked as the most loved programming language every year since 2016. The scene also mentions that high level programming languages have a garbage collector. Each point is emphasized with corresponding graphics and logos of Mozilla and Rust.",00:00:19.720
Rust in 100 Seconds-Scene-004_0.jpeg,Rust in 100 Seconds-Scene-004.mp4,4938,00:00:04.938,39005,00:00:39.005,functions like free and allocate to,"The scene uses a metaphor to explain the concept of manual memory allocation in low-level programming languages such as C++, comparing it to a situation where one might inadvertently shoot themselves in the foot. The scene uses a drawn illustration of a foot with a bullet hole to emphasize the metaphor.",00:00:34.067
Rust in 100 Seconds-Scene-005_0.jpeg,Rust in 100 Seconds-Scene-005.mp4,2235,00:00:02.235,43276,00:00:43.276,different approach it has no garbage,"The scene starts with a picture of Steve Jobs depicting how Rust takes a "different" approach using no garbage collector but using memory safety and concepts such as ownership and borrowing. The Rust borrow checker is mentioned as a tool to ensure code safety and performance. The scene uses a drawn illustration of a computer screen with code to explain the concept of memory allocation.",00:00:41.041
Rust in 100 Seconds-Scene-006_0.jpeg,Rust in 100 Seconds-Scene-006.mp4,3336,00:00:03.336,93826,00:01:33.825,started install rest then run cargo new,"Rust has a package manager called Cargo which is depicted with a graphic of a stack of crates. The scene explains how to start a Rust project by installing Rust, running Cargo, and creating a new project. The scene uses a drawn illustration of a computer screen with code to explain the process of creating a new project in Rust.",00:01:30.490
Rust in 100 Seconds-Scene-007_0.jpeg,Rust in 100 Seconds-Scene-007.mp4,15315,00:00:15.315,137604,00:02:17.604,been rust in 100 seconds hit the like,"The scene explains that Rust has a standard library with modules that handles I/O, filesystem, multithreading and more. To create an executable file in Rust, you can use the Rust compiler. The scene ends with an outro of the entire video. The scene uses a drawn illustration of a computer screen with code to explain the process of creating an executable file in Rust. The scene ends with the Rust logo and a message to subscribe.",00:02:02.289
