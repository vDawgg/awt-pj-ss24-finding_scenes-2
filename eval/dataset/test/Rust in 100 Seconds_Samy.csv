Filename,Source Filename,Timestamp Local (ms),Timestamp Local (hh:mm:ss.SSS),Timestamp Global (ms),Timestamp Global (hh:mm:ss.SSS),Subtitle,CAPTION,Start Timestamps
Rust in 100 Seconds-Scene-001_0.jpeg,Rust in 100 Seconds-Scene-001.mp4,7874,00:00:07.874,7874,00:00:07.873,systems where performance is absolutely,In this scene Rust is introduced and described as having a low level performance and a simplicity comparable to higher level languages,00:00:00.000
Rust in 100 Seconds-Scene-002_0.jpeg,Rust in 100 Seconds-Scene-002.mp4,7273,00:00:07.273,17717,00:00:17.716,started as a side project of great on,This scene describes what Rust is used for and when this language was developed ,00:00:10.444
Rust in 100 Seconds-Scene-003_0.jpeg,Rust in 100 Seconds-Scene-003.mp4,2235,00:00:02.235,21955,00:00:21.954,rust fungus it was sponsored by mozilla,"In this scene, the origin of the word Rust is explained, as well as the fact that Rust is one of the most popular programming languages. And at the end it is mentioned that high level programming languages have a garbage collector ",00:00:19.720
Rust in 100 Seconds-Scene-004_0.jpeg,Rust in 100 Seconds-Scene-004.mp4,4938,00:00:04.938,39005,00:00:39.005,functions like free and allocate to,"The scene alludes to low-level programming languages where manual memory allocation is necessary, likening them to situations where one might inadvertently shoot themselves in the foot.",00:00:34.067
Rust in 100 Seconds-Scene-005_0.jpeg,Rust in 100 Seconds-Scene-005.mp4,2235,00:00:02.235,43276,00:00:43.276,different approach it has no garbage,"This scene describes the advantages of Rust in terms of memory allocation. Rust has the concept of owning and borrowship, this ensures, with the help of the borrowchecker, that the code is safe as well as that a good performance is guaranteed",00:00:41.041
Rust in 100 Seconds-Scene-006_0.jpeg,Rust in 100 Seconds-Scene-006.mp4,3336,00:00:03.336,93826,00:01:33.825,started install rest then run cargo new,"In this scene, a programming example in Rust is used to demonstrate its unique syntax and concepts. For example, the Rust borrowing mechanism, which uses an ""&"" for unchangeable references or a ""mut"" before a variable, allows a variable to be changed.",00:01:30.490
Rust in 100 Seconds-Scene-007_0.jpeg,Rust in 100 Seconds-Scene-007.mp4,15315,00:00:15.315,137604,00:02:17.604,been rust in 100 seconds hit the like,"In this scene it is described that Rust has different libraries with different modules, which have different functionalities, as well as that you can create an executable file in Rust using the compiler. The scene ends with the outro of the entire video.",00:02:02.289
