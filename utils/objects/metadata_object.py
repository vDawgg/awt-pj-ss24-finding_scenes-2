import json
from typing import List
from pytube import YouTube
from utils.objects.scene_object import SceneObject
class MetaDataObject:
    """A class to represent the metadata of a video.
    
    Attributes:
        youtube_title (str): The title of the YouTube video.
        youtube_description (str): The description of the YouTube video.
        published_date (str): The published date of the YouTube video.
        youtube_video_id (str): The video ID of the YouTube video.
        youtube_thumbnail_url (str): The thumbnail URL of the YouTube video.
        youtube_rating (str): The rating of the YouTube video.
        youtube_views (str): The number of views of the YouTube video.
        youtube_age_restricted (str): Whether the YouTube video is age-restricted.
        youtube_keywords (List[str]): The keywords of the YouTube video.
        youtube_author (str): The author of the YouTube video.
        youtube_channel_id (str): The channel ID of the YouTube video.
        youtube_length (str): The length of the YouTube video.
        url (str): The URL of the video.
        llm_description (str): The description generated by the LLM.
        learning_resource_type (str): The learning resource type.
        intended_end_user_role (str): The intended end user role.
        context (str): The educational context of the video.
        difficulty_level (str): The difficulty level of the video.
        discipline (str): The discipline of the video.
        educational_level (str): The educational level of the video.
        target_audience_age (str): The target audience age of the video.
        typical_learning_time (str): The typical learning time of the video.
        scene_objects (List[SceneObject]): The scene objects of the video.
  
        
  Methods:
           to_json: Returns the metadata object as a JSON string.

    """
    def __init__(self, url, youtube_object: YouTube, SceneObjects: List[SceneObject] = []):
        self.youtube_title: str = youtube_object.title if youtube_object else ""
        self.youtube_description: str = youtube_object.description if youtube_object else ""
        self.published_date: str = str(youtube_object.publish_date) if youtube_object else ""
        self.youtube_video_id: str = youtube_object.video_id if youtube_object else ""
        self.youtube_thumbnail_url: str = youtube_object.thumbnail_url if youtube_object else ""
        self.youtube_rating: str = youtube_object.rating if youtube_object else ""
        self.youtube_views: str = youtube_object.views if youtube_object else ""
        self.youtube_age_restricted: str = youtube_object.age_restricted if youtube_object else ""
        self.youtube_keywords: List[str] = youtube_object.keywords if youtube_object else []
        self.youtube_author: str = youtube_object.author if youtube_object else ""
        self.youtube_channel_id: str = youtube_object.channel_id if youtube_object else ""
        self.youtube_length: str = youtube_object.length if youtube_object else ""
        self.url: str = url
        self.llm_description=""
        self.learning_resource_type=""
        self.intended_end_user_role=""
        self.context=""
        self.dificulty_level=""
        self.discipline=""
        self.educational_level=""
        self.target_audience_age=""
        self.typical_learning_time=""       
        self.scene_objects: List[SceneObject] =SceneObjects

    def to_json(self):
        return json.dumps(self.__dict__, default=lambda o: o.__dict__)
